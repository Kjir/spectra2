Requirements

This project requires Intel Integrated Performance Primitives and Boost version 1.36.0 or greater

Environmente variables

In order to compile and run the programs you need to add to the LD_LIBRARY_PATH environment variable
the path to the shared library of your Intel IPP installation. Here's an example command to do so:
export LD_LIBRARY_PATH=/opt/intel/ipp/6.0.2.076/em64t/sharedlib

Compiling

To compile the project you need autoconf and automake. To generate the necessary files run
autoreconf -i
Then you can run ./configure and make to compile the project

Testing

To test the functions, use the programs in test. Use the --help flag to have some descriptions about the flags available.
To see a graphical representation of the output, use the extra/plot.py script.

Sample usage

./test/siggen -l 2048 | ./test/fft -r 8 -n 4 -a 1 -p 12 -t 1 -o fft.sig
python extra/plot.py -f fft.sig -l 256

Time test

In the test directory there is a program called time and one called multi. They both test the time taken by each function to compute it's results. To see a graph of the results you can use gnuplot:
$ gnuplot
gnuplot> plot "order.dat" smooth sbezier
gnuplot> plot "order_int.dat" smooth sbezier
gnuplot> plot "integration.dat" smooth sbezier
gnuplot> plot "nomulti.dat" smooth sbezier
gnuplot> plot "multi5.dat" smooth sbezier
